{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1lK1UJmEbLz-i8eRtyr2KRDSTnDsTGhF0","timestamp":1672749359883}],"collapsed_sections":["Qmrka0A1bKUO","mziPULXFbuNp","XovPfUsPbExk"],"mount_file_id":"1qvy829X6kGwNBgVfpBCAXLvlVRyK9srM","authorship_tag":"ABX9TyPCNuRkTFaEJeg8G4fO3gkz"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["請就所提供的資料以財務特徵(X1-X95)預測公司是否破產(Y)，並新增衍生變數，比較不同的機器學習模型，並說明分析結果\n","\n","(Precision, Recall, Accuracy若未達0.9，請說明如何發展衍生變數使模式具有良好的預測能力)。\n","\n","類別:\n","Net Income Flag(94)、Liability-Assets Flag(85)、Bankrupt?"],"metadata":{"id":"zVUp9xdnMC49"}},{"cell_type":"markdown","source":["#載入檔案和套件"],"metadata":{"id":"Qmrka0A1bKUO"}},{"cell_type":"code","execution_count":1,"metadata":{"id":"f8_Aus8gLZdf","executionInfo":{"status":"ok","timestamp":1673328042844,"user_tz":-480,"elapsed":2655,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import mean_squared_error\n","import statsmodels.api as sm\n","from scipy import stats\n","from sklearn import metrics\n","from imblearn.under_sampling import RandomUnderSampler"]},{"cell_type":"markdown","source":["#***訓練集:測試集=75:25***"],"metadata":{"id":"TFCDfkpFbO_w"}},{"cell_type":"markdown","source":["#原始資料 混淆矩陣"],"metadata":{"id":"mziPULXFbuNp"}},{"cell_type":"code","source":["df=pd.read_excel(\"/content/drive/MyDrive/機器學習/闖關/預測公司破產資料.xlsx\")"],"metadata":{"id":"akwcKBorMmMJ","executionInfo":{"status":"ok","timestamp":1673328057871,"user_tz":-480,"elapsed":15032,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["f=df.groupby('Bankrupt?')\n","frequence=f.size()\n","flist=pd.DataFrame(frequence,columns=['Frequence_是否破產'])\n","f=df.groupby('Bankrupt?')\n","percentage=f.size()/len(df)\n","plist=pd.DataFrame(percentage,columns=['Percentage_是否破產'])\n","a=flist.merge(plist,on = 'Bankrupt?')\n","a"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"akH-i2AO8GxQ","executionInfo":{"status":"ok","timestamp":1672810038744,"user_tz":-480,"elapsed":30,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"d010f071-eaeb-45cb-96ef-625b1b190ac2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Frequence_是否破產  Percentage_是否破產\n","Bankrupt?                                 \n","0.0                  6599         0.967737\n","1.0                   220         0.032263"],"text/html":["\n","  <div id=\"df-5ba95b99-cf20-4ad9-b28a-f1947006c228\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Frequence_是否破產</th>\n","      <th>Percentage_是否破產</th>\n","    </tr>\n","    <tr>\n","      <th>Bankrupt?</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0.0</th>\n","      <td>6599</td>\n","      <td>0.967737</td>\n","    </tr>\n","    <tr>\n","      <th>1.0</th>\n","      <td>220</td>\n","      <td>0.032263</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5ba95b99-cf20-4ad9-b28a-f1947006c228')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-5ba95b99-cf20-4ad9-b28a-f1947006c228 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-5ba95b99-cf20-4ad9-b28a-f1947006c228');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["data=df"],"metadata":{"id":"_RRnME14gJqE","executionInfo":{"status":"ok","timestamp":1673328057872,"user_tz":-480,"elapsed":7,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["#給下面自變數X取除了Bankrupt?以外的欄位名稱，不然一個一個打會打到亂掉\n","a25=data.copy()\n","a25=a25.drop('Bankrupt?',axis=1)"],"metadata":{"id":"07tyU8t4V48h","executionInfo":{"status":"ok","timestamp":1673328057873,"user_tz":-480,"elapsed":7,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["X=a25[a25.columns]\n","y=data['Bankrupt?']\n","X_train, X_test,y_train,y_test = train_test_split(X,y,test_size = 0.25 ,random_state=33)"],"metadata":{"id":"q8nA0MyfVjD4","executionInfo":{"status":"ok","timestamp":1673328057873,"user_tz":-480,"elapsed":7,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["y_train.value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Fvh7DMUolvXX","executionInfo":{"status":"ok","timestamp":1673319128244,"user_tz":-480,"elapsed":313,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"0bbeef28-99a5-4d91-f047-d43e23bbed48"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.0    4941\n","1.0     173\n","Name: Bankrupt?, dtype: int64"]},"metadata":{},"execution_count":22}]},{"cell_type":"markdown","source":["決策樹"],"metadata":{"id":"Wm9VDHy2Ws8a"}},{"cell_type":"code","source":["from sklearn import tree\n","DT = tree.DecisionTreeClassifier(max_depth=65)\n","DT= DT.fit(X_train, y_train)"],"metadata":{"id":"9sAG9KkHVj8O"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#訓練\n","DT_pred= DT.predict(X_train)\n","from sklearn.metrics import classification_report,confusion_matrix\n","print(confusion_matrix(y_train,DT_pred))\n","print(\"======================================================\\n\")\n","print(classification_report(y_train,DT_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MDG4FMdtWlT9","executionInfo":{"status":"ok","timestamp":1672994863692,"user_tz":-480,"elapsed":3,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"f4a337be-39dd-4fa2-a2e6-a771c8186489"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[4941    0]\n"," [   0  173]]\n","======================================================\n","\n","              precision    recall  f1-score   support\n","\n","         0.0       1.00      1.00      1.00      4941\n","         1.0       1.00      1.00      1.00       173\n","\n","    accuracy                           1.00      5114\n","   macro avg       1.00      1.00      1.00      5114\n","weighted avg       1.00      1.00      1.00      5114\n","\n"]}]},{"cell_type":"code","source":["#測試\n","DT_pred= DT.predict(X_test)\n","from sklearn.metrics import classification_report,confusion_matrix\n","print(confusion_matrix(y_test,DT_pred))\n","print(\"======================================================\\n\")\n","print(classification_report(y_test,DT_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4HZoUYVpWlcf","executionInfo":{"status":"ok","timestamp":1672994865085,"user_tz":-480,"elapsed":3,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"151d0764-fb78-4f1d-b88e-38857d527234"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[1622   36]\n"," [  31   16]]\n","======================================================\n","\n","              precision    recall  f1-score   support\n","\n","         0.0       0.98      0.98      0.98      1658\n","         1.0       0.31      0.34      0.32        47\n","\n","    accuracy                           0.96      1705\n","   macro avg       0.64      0.66      0.65      1705\n","weighted avg       0.96      0.96      0.96      1705\n","\n"]}]},{"cell_type":"markdown","source":["隨機森林"],"metadata":{"id":"xXmx5sZfWvqv"}},{"cell_type":"code","source":["from sklearn.ensemble import RandomForestClassifier\n","RF = RandomForestClassifier(n_estimators=85,max_features=\"sqrt\",oob_score=True)\n","RF.fit(X_train.values,y_train.values)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"v0uqxh2-WpjW","executionInfo":{"status":"ok","timestamp":1673245754334,"user_tz":-480,"elapsed":3363,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"3cec4b23-1835-47c3-be89-aa18cdfccfcd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["RandomForestClassifier(max_features='sqrt', n_estimators=85, oob_score=True)"]},"metadata":{},"execution_count":481}]},{"cell_type":"code","source":["#訓練\n","RF_pred= RF.predict(X_train)\n","from sklearn.metrics import classification_report,confusion_matrix\n","print(confusion_matrix(y_train,RF_pred))\n","print(\"======================================================\\n\")\n","print(classification_report(y_train,RF_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"siZSFlBvWzlc","executionInfo":{"status":"ok","timestamp":1673245754335,"user_tz":-480,"elapsed":4,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"0bad675c-452d-47d1-969d-b2011c536336"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[4941    0]\n"," [   0  173]]\n","======================================================\n","\n","              precision    recall  f1-score   support\n","\n","         0.0       1.00      1.00      1.00      4941\n","         1.0       1.00      1.00      1.00       173\n","\n","    accuracy                           1.00      5114\n","   macro avg       1.00      1.00      1.00      5114\n","weighted avg       1.00      1.00      1.00      5114\n","\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/sklearn/base.py:443: UserWarning: X has feature names, but RandomForestClassifier was fitted without feature names\n","  warnings.warn(\n"]}]},{"cell_type":"code","source":["#測試\n","RF_pred= RF.predict(X_test)\n","from sklearn.metrics import classification_report,confusion_matrix\n","print(confusion_matrix(y_test,RF_pred))\n","print(\"======================================================\\n\")\n","print(classification_report(y_test,RF_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tyN630eGW2_M","executionInfo":{"status":"ok","timestamp":1673245770349,"user_tz":-480,"elapsed":447,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"eb5129e1-0f03-4260-8797-4060c786d92f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[1656    2]\n"," [  38    9]]\n","======================================================\n","\n","              precision    recall  f1-score   support\n","\n","         0.0       0.98      1.00      0.99      1658\n","         1.0       0.82      0.19      0.31        47\n","\n","    accuracy                           0.98      1705\n","   macro avg       0.90      0.60      0.65      1705\n","weighted avg       0.97      0.98      0.97      1705\n","\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/sklearn/base.py:443: UserWarning: X has feature names, but RandomForestClassifier was fitted without feature names\n","  warnings.warn(\n"]}]},{"cell_type":"markdown","source":["羅吉斯回歸"],"metadata":{"id":"gFV7P3atW90G"}},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression\n","LR = LogisticRegression(solver='lbfgs')\n","LR.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PFWV0nFJW7E4","executionInfo":{"status":"ok","timestamp":1673245795604,"user_tz":-480,"elapsed":561,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"3898a87c-6680-4bca-e3f2-a4fe4d09d3fd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n"]},{"output_type":"execute_result","data":{"text/plain":["LogisticRegression()"]},"metadata":{},"execution_count":484}]},{"cell_type":"code","source":["#訓練\n","from sklearn.metrics import classification_report,confusion_matrix\n","LR_pred= LR.predict(X_train)\n","print(confusion_matrix(y_train,LR_pred))\n","print(\"======================================================\\n\")\n","print(classification_report(y_train,LR_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WF1zxTJiXCEK","executionInfo":{"status":"ok","timestamp":1673245796462,"user_tz":-480,"elapsed":389,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"9ead22ab-3017-4da6-f713-16839736cfc0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[4892   49]\n"," [ 169    4]]\n","======================================================\n","\n","              precision    recall  f1-score   support\n","\n","         0.0       0.97      0.99      0.98      4941\n","         1.0       0.08      0.02      0.04       173\n","\n","    accuracy                           0.96      5114\n","   macro avg       0.52      0.51      0.51      5114\n","weighted avg       0.94      0.96      0.95      5114\n","\n"]}]},{"cell_type":"code","source":["#測試\n","from sklearn.metrics import classification_report,confusion_matrix\n","LR_pred= LR.predict(X_test)\n","print(confusion_matrix(y_test,LR_pred))\n","print(\"======================================================\\n\")\n","print(classification_report(y_test,LR_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gQK4l04PXCPG","executionInfo":{"status":"ok","timestamp":1673245817635,"user_tz":-480,"elapsed":283,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"27441bb4-96d3-4a44-a7d3-3f8849d85000"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[1636   22]\n"," [  47    0]]\n","======================================================\n","\n","              precision    recall  f1-score   support\n","\n","         0.0       0.97      0.99      0.98      1658\n","         1.0       0.00      0.00      0.00        47\n","\n","    accuracy                           0.96      1705\n","   macro avg       0.49      0.49      0.49      1705\n","weighted avg       0.95      0.96      0.95      1705\n","\n"]}]},{"cell_type":"markdown","source":["KNN"],"metadata":{"id":"qfAasx1ZkTjQ"}},{"cell_type":"code","source":["from sklearn.neighbors import KNeighborsClassifier\n","knn = KNeighborsClassifier(n_neighbors=15)\n","knn.fit(X_train, y_train)"],"metadata":{"id":"JevWap6vXHHE","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672996230291,"user_tz":-480,"elapsed":321,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"fff6358e-b2e5-4527-e41c-014b3b4dd5ef"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["KNeighborsClassifier(n_neighbors=15)"]},"metadata":{},"execution_count":398}]},{"cell_type":"code","source":["#訓練\n","knn_pred= knn.predict(X_train)\n","from sklearn.metrics import classification_report,confusion_matrix\n","print(confusion_matrix(y_train,knn_pred))\n","print(\"======================================================\\n\")\n","print(classification_report(y_train,knn_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1TxWFDaOkVMf","executionInfo":{"status":"ok","timestamp":1672996232468,"user_tz":-480,"elapsed":1733,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"f4b52fa8-d634-4748-a05c-901d9c742cb5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[4941    0]\n"," [ 172    1]]\n","======================================================\n","\n","              precision    recall  f1-score   support\n","\n","         0.0       0.97      1.00      0.98      4941\n","         1.0       1.00      0.01      0.01       173\n","\n","    accuracy                           0.97      5114\n","   macro avg       0.98      0.50      0.50      5114\n","weighted avg       0.97      0.97      0.95      5114\n","\n"]}]},{"cell_type":"code","source":["#測試\n","knn_pred= knn.predict(X_test)\n","from sklearn.metrics import classification_report,confusion_matrix\n","print(confusion_matrix(y_test,knn_pred))\n","print(\"======================================================\\n\")\n","print(classification_report(y_test,knn_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"41WzrTwWkd5M","executionInfo":{"status":"ok","timestamp":1672996232941,"user_tz":-480,"elapsed":478,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"ec393975-1c4b-404a-93a8-1ca299547066"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[1658    0]\n"," [  47    0]]\n","======================================================\n","\n","              precision    recall  f1-score   support\n","\n","         0.0       0.97      1.00      0.99      1658\n","         1.0       0.00      0.00      0.00        47\n","\n","    accuracy                           0.97      1705\n","   macro avg       0.49      0.50      0.49      1705\n","weighted avg       0.95      0.97      0.96      1705\n","\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.8/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.8/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"markdown","source":["#標準化、特徵篩選 混淆矩陣"],"metadata":{"id":"S8bMSMUrqQOI"}},{"cell_type":"code","source":["#最小最大值標準化\n","from sklearn import preprocessing\n","minmax=preprocessing.MinMaxScaler()\n","dataMinMax=minmax.fit_transform(data)\n","dataMinMax=pd.DataFrame(dataMinMax,columns=['Bankrupt?', ' ROA(C) before interest and depreciation before interest',' ROA(A) before interest and % after tax',\n","       ' ROA(B) before interest and depreciation after tax',' Operating Gross Margin', ' Realized Sales Gross Margin',' Operating Profit Rate', \n","       ' Pre-tax net Interest Rate',' After-tax net Interest Rate',' Non-industry income and expenditure/revenue',\n","       ' Continuous interest rate (after tax)', ' Operating Expense Rate',' Research and development expense rate', ' Cash flow rate',\n","       ' Interest-bearing debt interest rate', ' Tax rate (A)',' Net Value Per Share (B)', ' Net Value Per Share (A)',\n","       ' Net Value Per Share (C)', ' Persistent EPS in the Last Four Seasons',' Cash Flow Per Share', ' Revenue Per Share (Yuan 瞼)',\n","       ' Operating Profit Per Share (Yuan 瞼)',' Per Share Net profit before tax (Yuan 瞼)',' Realized Sales Gross Profit Growth Rate',\n","       ' Operating Profit Growth Rate', ' After-tax Net Profit Growth Rate',' Regular Net Profit Growth Rate', ' Continuous Net Profit Growth Rate',\n","       ' Total Asset Growth Rate', ' Net Value Growth Rate',' Total Asset Return Growth Rate Ratio', ' Cash Reinvestment %',\n","       ' Current Ratio', ' Quick Ratio', ' Interest Expense Ratio',' Total debt/Total net worth', ' Debt ratio %', ' Net worth/Assets',\n","       ' Long-term fund suitability ratio (A)', ' Borrowing dependency',' Contingent liabilities/Net worth',' Operating profit/Paid-in capital',\n","       ' Net profit before tax/Paid-in capital',' Inventory and accounts receivable/Net value', ' Total Asset Turnover',\n","       ' Accounts Receivable Turnover', ' Average Collection Days',' Inventory Turnover Rate (times)', ' Fixed Assets Turnover Frequency',\n","       ' Net Worth Turnover Rate (times)', ' Revenue per person',' Operating profit per person', ' Allocation rate per person',\n","       ' Working Capital to Total Assets', ' Quick Assets/Total Assets',' Current Assets/Total Assets', ' Cash/Total Assets',\n","       ' Quick Assets/Current Liability', ' Cash/Current Liability',' Current Liability to Assets', ' Operating Funds to Liability',\n","       ' Inventory/Working Capital', ' Inventory/Current Liability',' Current Liabilities/Liability', ' Working Capital/Equity',\n","       ' Current Liabilities/Equity', ' Long-term Liability to Current Assets',' Retained Earnings to Total Assets', ' Total income/Total expense',\n","       ' Total expense/Assets', ' Current Asset Turnover Rate',' Quick Asset Turnover Rate', ' Working capitcal Turnover Rate',\n","       ' Cash Turnover Rate', ' Cash Flow to Sales', ' Fixed Assets to Assets',' Current Liability to Liability', ' Current Liability to Equity',\n","       ' Equity to Long-term Liability', ' Cash Flow to Total Assets',' Cash Flow to Liability', ' CFO to Assets', ' Cash Flow to Equity',\n","       ' Current Liability to Current Assets', ' Liability-Assets Flag',' Net Income to Total Assets', ' Total assets to GNP price',\n","       ' No-credit Interval', ' Gross Profit to Sales',\" Net Income to Stockholder's Equity\", ' Liability to Equity',\n","       ' Degree of Financial Leverage (DFL)',' Interest Coverage Ratio (Interest expense to EBIT)',' Net Income Flag', ' Equity to Liability'])"],"metadata":{"id":"PWQSi5HRqQOJ","executionInfo":{"status":"ok","timestamp":1673328057874,"user_tz":-480,"elapsed":8,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["#1類對多量的t檢定\n","\n","data_set2=[' ROA(C) before interest and depreciation before interest',' ROA(A) before interest and % after tax',' ROA(B) before interest and depreciation after tax',\n","       ' Operating Gross Margin', ' Realized Sales Gross Margin',' Operating Profit Rate', ' Pre-tax net Interest Rate',' After-tax net Interest Rate',\n","       ' Non-industry income and expenditure/revenue',' Continuous interest rate (after tax)', ' Operating Expense Rate',' Research and development expense rate',\n","       ' Cash flow rate',' Interest-bearing debt interest rate', ' Tax rate (A)',' Net Value Per Share (B)', ' Net Value Per Share (A)',\n","       ' Net Value Per Share (C)', ' Persistent EPS in the Last Four Seasons',' Cash Flow Per Share', ' Revenue Per Share (Yuan 瞼)',\n","       ' Operating Profit Per Share (Yuan 瞼)',' Per Share Net profit before tax (Yuan 瞼)',' Realized Sales Gross Profit Growth Rate',\n","       ' Operating Profit Growth Rate', ' After-tax Net Profit Growth Rate',' Regular Net Profit Growth Rate', ' Continuous Net Profit Growth Rate',\n","       ' Total Asset Growth Rate', ' Net Value Growth Rate',' Total Asset Return Growth Rate Ratio', ' Cash Reinvestment %',\n","       ' Current Ratio', ' Quick Ratio', ' Interest Expense Ratio',' Total debt/Total net worth', ' Debt ratio %', ' Net worth/Assets',\n","       ' Long-term fund suitability ratio (A)', ' Borrowing dependency',' Contingent liabilities/Net worth',' Operating profit/Paid-in capital',\n","       ' Net profit before tax/Paid-in capital',' Inventory and accounts receivable/Net value', ' Total Asset Turnover',' Accounts Receivable Turnover',\n","       ' Average Collection Days',' Inventory Turnover Rate (times)', ' Fixed Assets Turnover Frequency',' Net Worth Turnover Rate (times)',\n","       ' Revenue per person',' Operating profit per person', ' Allocation rate per person',' Working Capital to Total Assets',\n","       ' Quick Assets/Total Assets',' Current Assets/Total Assets', ' Cash/Total Assets',' Quick Assets/Current Liability', ' Cash/Current Liability',\n","       ' Current Liability to Assets', ' Operating Funds to Liability',' Inventory/Working Capital', ' Inventory/Current Liability',\n","       ' Current Liabilities/Liability', ' Working Capital/Equity',' Current Liabilities/Equity', ' Long-term Liability to Current Assets',\n","       ' Retained Earnings to Total Assets', ' Total income/Total expense',' Total expense/Assets', ' Current Asset Turnover Rate',\n","       ' Quick Asset Turnover Rate', ' Working capitcal Turnover Rate',' Cash Turnover Rate', ' Cash Flow to Sales', ' Fixed Assets to Assets',\n","       ' Current Liability to Liability', ' Current Liability to Equity',' Equity to Long-term Liability', ' Cash Flow to Total Assets',\n","       ' Cash Flow to Liability', ' CFO to Assets', ' Cash Flow to Equity',' Current Liability to Current Assets',' Net Income to Total Assets',\n","       ' Total assets to GNP price',' No-credit Interval', ' Gross Profit to Sales',\" Net Income to Stockholder's Equity\",\n","       ' Liability to Equity',' Degree of Financial Leverage (DFL)',' Interest Coverage Ratio (Interest expense to EBIT)',' Equity to Liability']\n","name=[]\n","alist=[]\n","pvlist=[]\n","for i in range(len(data_set2)):\n","  (a,pv)=stats.ttest_ind(dataMinMax[data_set2[i]][dataMinMax['Bankrupt?']==0],dataMinMax[data_set2[i]][dataMinMax['Bankrupt?']==1])\n","  name.append(data_set2[i])\n","  alist.append(a)\n","  pvlist.append(pv)\n","pd.set_option('display.float_format',lambda x:'%.3f'%x)\n","result=pd.DataFrame(alist,name,columns=['t_value'])\n","result.insert(1,'p_value',pvlist)\n","result=result.sort_values(by=['p_value'])[::1]\n","result"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"PHYAMGvVtD6J","executionInfo":{"status":"ok","timestamp":1672810041481,"user_tz":-480,"elapsed":13,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"c4d10b63-68ca-4316-eddb-d9b6e0ae100b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                    t_value  p_value\n"," Net Income to Total Assets                          27.447    0.000\n"," ROA(A) before interest and % after tax              24.356    0.000\n"," ROA(B) before interest and depreciation after tax   23.435    0.000\n"," ROA(C) before interest and depreciation before...   22.305    0.000\n"," Net worth/Assets                                    21.333    0.000\n","...                                                     ...      ...\n"," Inventory/Current Liability                         -0.068    0.946\n"," Long-term Liability to Current Assets               -0.064    0.949\n"," Cash Flow to Sales                                  -0.040    0.968\n"," Realized Sales Gross Profit Growth Rate              0.038    0.970\n"," Operating Profit Rate                                0.019    0.985\n","\n","[93 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-49b72642-b765-4d38-8fd0-7ea27676af2d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>t_value</th>\n","      <th>p_value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Net Income to Total Assets</th>\n","      <td>27.447</td>\n","      <td>0.000</td>\n","    </tr>\n","    <tr>\n","      <th>ROA(A) before interest and % after tax</th>\n","      <td>24.356</td>\n","      <td>0.000</td>\n","    </tr>\n","    <tr>\n","      <th>ROA(B) before interest and depreciation after tax</th>\n","      <td>23.435</td>\n","      <td>0.000</td>\n","    </tr>\n","    <tr>\n","      <th>ROA(C) before interest and depreciation before interest</th>\n","      <td>22.305</td>\n","      <td>0.000</td>\n","    </tr>\n","    <tr>\n","      <th>Net worth/Assets</th>\n","      <td>21.333</td>\n","      <td>0.000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>Inventory/Current Liability</th>\n","      <td>-0.068</td>\n","      <td>0.946</td>\n","    </tr>\n","    <tr>\n","      <th>Long-term Liability to Current Assets</th>\n","      <td>-0.064</td>\n","      <td>0.949</td>\n","    </tr>\n","    <tr>\n","      <th>Cash Flow to Sales</th>\n","      <td>-0.040</td>\n","      <td>0.968</td>\n","    </tr>\n","    <tr>\n","      <th>Realized Sales Gross Profit Growth Rate</th>\n","      <td>0.038</td>\n","      <td>0.970</td>\n","    </tr>\n","    <tr>\n","      <th>Operating Profit Rate</th>\n","      <td>0.019</td>\n","      <td>0.985</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>93 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-49b72642-b765-4d38-8fd0-7ea27676af2d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-49b72642-b765-4d38-8fd0-7ea27676af2d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-49b72642-b765-4d38-8fd0-7ea27676af2d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["#1類對多類的卡方檢定\n","\n","qv3=[' Net Income Flag',' Liability-Assets Flag']\n","alist = []\n","pvlist = []\n","name = []\n","for i in qv3:\n","  cr=stats.chi2_contingency(pd.crosstab(dataMinMax['Bankrupt?'],dataMinMax[i]))\n","  pvlist.append(cr[1:2])\n","  alist.append(cr[0:1])\n","  name.append(i)\n","pd.set_option('display.float_format',lambda x:'%.3f'%x)\n","result=pd.DataFrame(alist,name,columns=['Chi-Square'])\n","pvlist2 = [item for t in pvlist for item in t] #Tuple to List\n","result.insert(1,'p_value',pvlist2)\n","result=result.sort_values(by=['p_value'])[::-1]\n","result"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"0UolljsZtGwr","executionInfo":{"status":"ok","timestamp":1672810041481,"user_tz":-480,"elapsed":10,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"d216a051-9f0e-4129-cc4d-60dd2fa61376"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                        Chi-Square  p_value\n"," Net Income Flag             0.000    1.000\n"," Liability-Assets Flag     110.138    0.000"],"text/html":["\n","  <div id=\"df-b77f5300-e6a2-490b-971e-406a2488c4f0\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Chi-Square</th>\n","      <th>p_value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Net Income Flag</th>\n","      <td>0.000</td>\n","      <td>1.000</td>\n","    </tr>\n","    <tr>\n","      <th>Liability-Assets Flag</th>\n","      <td>110.138</td>\n","      <td>0.000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b77f5300-e6a2-490b-971e-406a2488c4f0')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b77f5300-e6a2-490b-971e-406a2488c4f0 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b77f5300-e6a2-490b-971e-406a2488c4f0');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["dataP=dataMinMax[[' Liability-Assets Flag',' ROA(A) before interest and % after tax',' ROA(B) before interest and depreciation after tax',\n","       ' ROA(C) before interest and depreciation before interest',' Net worth/Assets', ' Debt ratio %',' Persistent EPS in the Last Four Seasons',\n","       ' Per Share Net profit before tax (Yuan 瞼)', ' Borrowing dependency',' Net Value Per Share (A)', ' Net Value Per Share (B)',\n","       ' Net Value Per Share (C)', ' Operating Profit Per Share (Yuan 瞼)',' Operating profit/Paid-in capital', ' Tax rate (A)',\n","       ' Operating Gross Margin', ' Realized Sales Gross Margin',' Cash Flow Per Share', ' Cash flow rate',' Contingent liabilities/Net worth',\n","       ' Net Value Growth Rate',' Cash Reinvestment %', ' Total Asset Growth Rate',' After-tax Net Profit Growth Rate',\n","       ' Regular Net Profit Growth Rate',' Quick Ratio', ' Research and development expense rate',' Net Income to Total Assets',\n","       ' Retained Earnings to Total Assets',' Net profit before tax/Paid-in capital',' Current Liability to Assets', ' Working Capital to Total Assets',\n","       \" Net Income to Stockholder's Equity\",' Current Liability to Current Assets', ' Liability to Equity',' Current Liability to Equity',\n","       ' Current Liabilities/Equity',' Working Capital/Equity', ' Total expense/Assets',' Equity to Long-term Liability', ' CFO to Assets',\n","       ' Cash/Total Assets',' Gross Profit to Sales',' Operating profit per person', ' Quick Assets/Total Assets',' Equity to Liability',\n","       ' Cash/Current Liability',' Operating Funds to Liability',' Inventory and accounts receivable/Net value',' Fixed Assets Turnover Frequency',\n","       ' Cash Flow to Total Assets',' Total Asset Turnover', ' Fixed Assets to Assets',' Cash Flow to Equity', ' Current Assets/Total Assets',\n","       ' Cash Flow to Liability', ' Revenue per person',' Total assets to GNP price', ' Quick Asset Turnover Rate']]"],"metadata":{"id":"2xNfFfiyqQOK","executionInfo":{"status":"ok","timestamp":1673328057874,"user_tz":-480,"elapsed":7,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["datanew=dataP.copy()"],"metadata":{"id":"KewizDMHHdKM","executionInfo":{"status":"ok","timestamp":1673328057874,"user_tz":-480,"elapsed":7,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["datanew['Net Value']=(dataP[' Net Value Per Share (A)']+dataP[' Net Value Per Share (B)']+dataP[' Net Value Per Share (C)'])/3\n","datanew['Growth Rate']=(dataP[' Net Value Growth Rate']+dataP[' Regular Net Profit Growth Rate']+dataP[' Total Asset Growth Rate']+dataP[' After-tax Net Profit Growth Rate'])/4\n","datanew['ROA']=(dataP[' ROA(A) before interest and % after tax']+dataP[' ROA(B) before interest and depreciation after tax']+dataP[' ROA(C) before interest and depreciation before interest'])/3\n","datanew['gross margin']=(dataP[' Operating Gross Margin']+dataP[' Realized Sales Gross Margin'])/2\n","datanew['Per Share']=(dataP[' Net Value Per Share (A)']+dataP[' Net Value Per Share (B)']+dataP[' Net Value Per Share (C)']+dataP[' Per Share Net profit before tax (Yuan 瞼)']+dataP[' Operating Profit Per Share (Yuan 瞼)']+dataP[' Cash Flow Per Share']+dataP[' Cash Flow Per Share'])/7\n","datanew['per person']=(dataP[' Operating profit per person']+dataP[' Revenue per person'])/2\n","datanew['Turnover']=(dataP[' Fixed Assets Turnover Frequency']+dataP[' Quick Asset Turnover Rate']+dataP[' Total Asset Turnover'])/3"],"metadata":{"id":"HprsXY-hHbMY","executionInfo":{"status":"ok","timestamp":1673328057875,"user_tz":-480,"elapsed":8,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["# datanew.to_excel('破產-資料已處理.xlsx')"],"metadata":{"id":"yIgOgLKZep9a"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#給下面自變數X取除了Bankrupt?以外的欄位名稱，不然一個一個打會打到亂掉\n","a25=datanew.copy()"],"metadata":{"id":"-t1LVva3qQOK","executionInfo":{"status":"ok","timestamp":1673328207254,"user_tz":-480,"elapsed":371,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["X=a25[a25.columns]\n","y=data['Bankrupt?']\n","from imblearn.under_sampling import RandomUnderSampler\n","rus = RandomUnderSampler()\n","X_resampled, y_resampled = rus.fit_resample(X, y)\n","X_train, X_test,y_train,y_test = train_test_split(X_resampled,y_resampled,test_size = 0.25 ,random_state=33)"],"metadata":{"id":"XM3Feyz5qQOL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn import datasets\n","from sklearn.model_selection import train_test_split\n","import tensorflow as tf\n","import numpy as np\n","\n","X=a25[a25.columns]\n","y=data['Bankrupt?']\n","\n","category=2\n","dim=65\n","X_train , X_test , y_train , y_test = train_test_split(X,y,test_size=0.2)\n","\n","# 建立模型\n","model = tf.keras.models.Sequential()\n","model.add(tf.keras.layers.Dense(units=10,\n","    activation=tf.nn.relu,\n","    input_dim=dim))\n","model.add(tf.keras.layers.Dense(units=10,\n","    activation=tf.nn.relu ))\n","\n","model.add(tf.keras.layers.Dense(units=category,\n","    activation=tf.nn.softmax ))\n","model.compile(optimizer='Adam',\n","    loss=tf.keras.losses.categorical_crossentropy,\n","    metrics=['accuracy'])\n","model.fit(tf.expand_dims(X_train, axis=-1),y_train,epochs=25,batch_size=600)\n","\n","#測試\n","\n","score = model.evaluate(X_test, y_test, batch_size=600)\n","print(\"score:\",score)\n","\n","predict = model.predict(X_test)\n","print(\"Ans:\",np.argmax(predict[0]),np.argmax(predict[1]),np.argmax(predict[2]),np.argmax(predict[3]))\n","\n","predict2 = model.predict_classes(X_test)\n","print(\"predict_classes:\",predict2)\n","print(\"y_test\",y_test[:])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":712},"id":"WVTpWa7AID8E","executionInfo":{"status":"error","timestamp":1673328831575,"user_tz":-480,"elapsed":565,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"5cd60714-053a-4d73-afd9-202a80b15c92"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/25\n"]},{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-18-d18023cd422b>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     24\u001b[0m     \u001b[0mloss\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mkeras\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlosses\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcategorical_crossentropy\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     25\u001b[0m     metrics=['accuracy'])\n\u001b[0;32m---> 26\u001b[0;31m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexpand_dims\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0my_train\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mepochs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m25\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mbatch_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m600\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     27\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     28\u001b[0m \u001b[0;31m#測試\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/keras/utils/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     65\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# pylint: disable=broad-except\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     66\u001b[0m       \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_process_traceback_frames\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__traceback__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 67\u001b[0;31m       \u001b[0;32mraise\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwith_traceback\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfiltered_tb\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     68\u001b[0m     \u001b[0;32mfinally\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     69\u001b[0m       \u001b[0;32mdel\u001b[0m \u001b[0mfiltered_tb\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/keras/engine/training.py\u001b[0m in \u001b[0;36mtf__train_function\u001b[0;34m(iterator)\u001b[0m\n\u001b[1;32m     13\u001b[0m                 \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     14\u001b[0m                     \u001b[0mdo_return\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 15\u001b[0;31m                     \u001b[0mretval_\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mag__\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mconverted_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mag__\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mld\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstep_function\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mag__\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mld\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mag__\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mld\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0miterator\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfscope\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     16\u001b[0m                 \u001b[0;32mexcept\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     17\u001b[0m                     \u001b[0mdo_return\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: in user code:\n\n    File \"/usr/local/lib/python3.8/dist-packages/keras/engine/training.py\", line 1051, in train_function  *\n        return step_function(self, iterator)\n    File \"/usr/local/lib/python3.8/dist-packages/keras/engine/training.py\", line 1040, in step_function  **\n        outputs = model.distribute_strategy.run(run_step, args=(data,))\n    File \"/usr/local/lib/python3.8/dist-packages/keras/engine/training.py\", line 1030, in run_step  **\n        outputs = model.train_step(data)\n    File \"/usr/local/lib/python3.8/dist-packages/keras/engine/training.py\", line 889, in train_step\n        y_pred = self(x, training=True)\n    File \"/usr/local/lib/python3.8/dist-packages/keras/utils/traceback_utils.py\", line 67, in error_handler\n        raise e.with_traceback(filtered_tb) from None\n    File \"/usr/local/lib/python3.8/dist-packages/keras/engine/input_spec.py\", line 264, in assert_input_compatibility\n        raise ValueError(f'Input {input_index} of layer \"{layer_name}\" is '\n\n    ValueError: Input 0 of layer \"sequential_6\" is incompatible with the layer: expected shape=(None, 65), found shape=(None, 66, 1)\n"]}]},{"cell_type":"code","source":["y_train.value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vHahfd1VgBTY","executionInfo":{"status":"ok","timestamp":1673319155030,"user_tz":-480,"elapsed":374,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"1b79b823-56ad-4cfc-fe7b-59079761fe58"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.0    175\n","1.0    155\n","Name: Bankrupt?, dtype: int64"]},"metadata":{},"execution_count":29}]},{"cell_type":"markdown","source":["決策樹"],"metadata":{"id":"7wTy115PqQOL"}},{"cell_type":"code","source":["from sklearn import tree\n","DT = tree.DecisionTreeClassifier(max_depth=65)\n","DT= DT.fit(X_train, y_train)"],"metadata":{"id":"5kCZbIGYqQOL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#訓練\n","DT_pred= DT.predict(X_train)\n","from sklearn.metrics import classification_report,confusion_matrix\n","print(confusion_matrix(y_train,DT_pred))\n","print(\"======================================================\\n\")\n","print(classification_report(y_train,DT_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1673245200565,"user_tz":-480,"elapsed":6,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"841ab5c5-9e47-443d-c5c3-ff98625e1b0e","id":"nPtQiM4SqQOL"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[175   0]\n"," [  0 155]]\n","======================================================\n","\n","              precision    recall  f1-score   support\n","\n","         0.0       1.00      1.00      1.00       175\n","         1.0       1.00      1.00      1.00       155\n","\n","    accuracy                           1.00       330\n","   macro avg       1.00      1.00      1.00       330\n","weighted avg       1.00      1.00      1.00       330\n","\n"]}]},{"cell_type":"code","source":["#測試\n","DT_pred= DT.predict(X_test)\n","from sklearn.metrics import classification_report,confusion_matrix\n","print(confusion_matrix(y_test,DT_pred))\n","print(\"======================================================\\n\")\n","print(classification_report(y_test,DT_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1673245200566,"user_tz":-480,"elapsed":6,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"41106b13-13b8-4cad-eb68-cd4dcc46187d","id":"K8DYA8bcqQOL"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[41  4]\n"," [15 50]]\n","======================================================\n","\n","              precision    recall  f1-score   support\n","\n","         0.0       0.73      0.91      0.81        45\n","         1.0       0.93      0.77      0.84        65\n","\n","    accuracy                           0.83       110\n","   macro avg       0.83      0.84      0.83       110\n","weighted avg       0.85      0.83      0.83       110\n","\n"]}]},{"cell_type":"markdown","source":["隨機森林"],"metadata":{"id":"fZJUWmm8qQOM"}},{"cell_type":"code","source":["from sklearn.ensemble import RandomForestClassifier\n","RF = RandomForestClassifier(n_estimators=85,max_features=\"sqrt\",oob_score=True)\n","RF.fit(X_train.values,y_train.values)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1673245351129,"user_tz":-480,"elapsed":462,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"0012159d-969e-4559-fe24-c9b3a3ed5d6b","id":"j6WeFXdiqQOM"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["RandomForestClassifier(max_features='sqrt', n_estimators=85, oob_score=True)"]},"metadata":{},"execution_count":410}]},{"cell_type":"code","source":["#訓練\n","RF_pred= RF.predict(X_train)\n","from sklearn.metrics import classification_report,confusion_matrix\n","print(confusion_matrix(y_train,RF_pred))\n","print(\"======================================================\\n\")\n","print(classification_report(y_train,RF_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1673245351587,"user_tz":-480,"elapsed":8,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"68342bcb-51a7-46be-ec12-1b0ce3e176fe","id":"Rd35xptrqQOM"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[175   0]\n"," [  0 155]]\n","======================================================\n","\n","              precision    recall  f1-score   support\n","\n","         0.0       1.00      1.00      1.00       175\n","         1.0       1.00      1.00      1.00       155\n","\n","    accuracy                           1.00       330\n","   macro avg       1.00      1.00      1.00       330\n","weighted avg       1.00      1.00      1.00       330\n","\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/sklearn/base.py:443: UserWarning: X has feature names, but RandomForestClassifier was fitted without feature names\n","  warnings.warn(\n"]}]},{"cell_type":"code","source":["#測試\n","RF_pred= RF.predict(X_test)\n","from sklearn.metrics import classification_report,confusion_matrix\n","print(confusion_matrix(y_test,RF_pred))\n","print(\"======================================================\\n\")\n","print(classification_report(y_test,RF_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1673244974173,"user_tz":-480,"elapsed":4,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"0577ee29-8a13-4e33-fde7-999da5620bd9","id":"Qr4Eds8bqQOM"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[43  2]\n"," [ 6 59]]\n","======================================================\n","\n","              precision    recall  f1-score   support\n","\n","         0.0       0.88      0.96      0.91        45\n","         1.0       0.97      0.91      0.94        65\n","\n","    accuracy                           0.93       110\n","   macro avg       0.92      0.93      0.93       110\n","weighted avg       0.93      0.93      0.93       110\n","\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/sklearn/base.py:443: UserWarning: X has feature names, but RandomForestClassifier was fitted without feature names\n","  warnings.warn(\n"]}]},{"cell_type":"markdown","source":["羅吉斯回歸"],"metadata":{"id":"J5U5BV9BqQOM"}},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression\n","LR = LogisticRegression(solver='lbfgs')\n","LR.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1673245583125,"user_tz":-480,"elapsed":456,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"5e7016ab-211e-4cb9-cc3a-b3817768c06a","id":"-TIDdrbcqQOM"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegression()"]},"metadata":{},"execution_count":455}]},{"cell_type":"code","source":["#訓練\n","from sklearn.metrics import classification_report,confusion_matrix\n","LR_pred= LR.predict(X_train)\n","print(confusion_matrix(y_train,LR_pred))\n","print(\"======================================================\\n\")\n","print(classification_report(y_train,LR_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1673245583125,"user_tz":-480,"elapsed":6,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"7ab2c7df-30b5-40e3-8553-5039d58fa8ea","id":"8A7lvszuqQOM"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[149  26]\n"," [ 32 123]]\n","======================================================\n","\n","              precision    recall  f1-score   support\n","\n","         0.0       0.82      0.85      0.84       175\n","         1.0       0.83      0.79      0.81       155\n","\n","    accuracy                           0.82       330\n","   macro avg       0.82      0.82      0.82       330\n","weighted avg       0.82      0.82      0.82       330\n","\n"]}]},{"cell_type":"code","source":["#測試 \n","from sklearn.metrics import classification_report,confusion_matrix\n","LR_pred= LR.predict(X_test)\n","print(confusion_matrix(y_test,LR_pred))\n","print(\"======================================================\\n\")\n","print(classification_report(y_test,LR_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lS71hS2lNXWD","executionInfo":{"status":"ok","timestamp":1673245589135,"user_tz":-480,"elapsed":454,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"6b0e4748-3bcc-4fb4-f474-5e8fa1c108fd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[42  3]\n"," [ 6 59]]\n","======================================================\n","\n","              precision    recall  f1-score   support\n","\n","         0.0       0.88      0.93      0.90        45\n","         1.0       0.95      0.91      0.93        65\n","\n","    accuracy                           0.92       110\n","   macro avg       0.91      0.92      0.92       110\n","weighted avg       0.92      0.92      0.92       110\n","\n"]}]},{"cell_type":"markdown","source":["KNN"],"metadata":{"id":"fJWw0MjUqQON"}},{"cell_type":"code","source":["from sklearn.neighbors import KNeighborsClassifier\n","knn = KNeighborsClassifier(n_neighbors=15) \n","knn.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1673245648988,"user_tz":-480,"elapsed":431,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"7ffa4faa-b26c-4547-c0c5-acdd9710f1a1","id":"c38Ie776qQON"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["KNeighborsClassifier(n_neighbors=15)"]},"metadata":{},"execution_count":476}]},{"cell_type":"code","source":["#訓練\n","knn_pred= knn.predict(X_train)\n","from sklearn.metrics import classification_report,confusion_matrix\n","print(confusion_matrix(y_train,knn_pred))\n","print(\"======================================================\\n\")\n","print(classification_report(y_train,knn_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1673245649261,"user_tz":-480,"elapsed":6,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"b2f30eff-dc2c-4885-bbda-2d2fc0132528","id":"SyfEtmXgqQON"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[142  33]\n"," [ 32 123]]\n","======================================================\n","\n","              precision    recall  f1-score   support\n","\n","         0.0       0.82      0.81      0.81       175\n","         1.0       0.79      0.79      0.79       155\n","\n","    accuracy                           0.80       330\n","   macro avg       0.80      0.80      0.80       330\n","weighted avg       0.80      0.80      0.80       330\n","\n"]}]},{"cell_type":"code","source":["#測試\n","knn_pred= knn.predict(X_test)\n","from sklearn.metrics import classification_report,confusion_matrix\n","print(confusion_matrix(y_test,knn_pred))\n","print(\"======================================================\\n\")\n","print(classification_report(y_test,knn_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1673245649261,"user_tz":-480,"elapsed":5,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"5c8ad1a5-fe7b-49f2-9fb8-66765586aa66","id":"CRFdHSYtqQOP"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[40  5]\n"," [11 54]]\n","======================================================\n","\n","              precision    recall  f1-score   support\n","\n","         0.0       0.78      0.89      0.83        45\n","         1.0       0.92      0.83      0.87        65\n","\n","    accuracy                           0.85       110\n","   macro avg       0.85      0.86      0.85       110\n","weighted avg       0.86      0.85      0.86       110\n","\n"]}]},{"cell_type":"markdown","source":["#***訓練集:測試集=67:33***"],"metadata":{"id":"Sn3gUU4xbhIk"}},{"cell_type":"markdown","source":["#原始資料 混淆矩陣"],"metadata":{"id":"XovPfUsPbExk"}},{"cell_type":"code","source":["#給下面自變數X取除了Bankrupt?以外的欄位名稱，不然一個一個打會打到亂掉\n","a33=data.copy()\n","a33=a33.drop('Bankrupt?',axis=1)"],"metadata":{"id":"nRvfuwpVlGIU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X=a33[a33.columns]\n","y=data['Bankrupt?']\n","X_train, X_test,y_train,y_test = train_test_split(X,y,test_size = 0.33 ,random_state=33)"],"metadata":{"id":"OtWiYpSSbExl"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["決策樹"],"metadata":{"id":"wI0bHHyLbExl"}},{"cell_type":"code","source":["from sklearn import tree\n","DT = tree.DecisionTreeClassifier(max_depth=65)\n","DT= DT.fit(X_train, y_train)"],"metadata":{"id":"9xoj4z9FbExl"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#訓練\n","DT_pred= DT.predict(X_train)\n","from sklearn.metrics import classification_report,confusion_matrix\n","print(confusion_matrix(y_train,DT_pred))\n","print(\"======================================================\\n\")\n","print(classification_report(y_train,DT_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672995025858,"user_tz":-480,"elapsed":5,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"6d637dba-472e-4298-d197-f73ebce6de6e","id":"-ixdKs1HbExl"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[4411    0]\n"," [   0  157]]\n","======================================================\n","\n","              precision    recall  f1-score   support\n","\n","         0.0       1.00      1.00      1.00      4411\n","         1.0       1.00      1.00      1.00       157\n","\n","    accuracy                           1.00      4568\n","   macro avg       1.00      1.00      1.00      4568\n","weighted avg       1.00      1.00      1.00      4568\n","\n"]}]},{"cell_type":"code","source":["#測試\n","DT_pred= DT.predict(X_test)\n","from sklearn.metrics import classification_report,confusion_matrix\n","print(confusion_matrix(y_test,DT_pred))\n","print(\"======================================================\\n\")\n","print(classification_report(y_test,DT_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672995027241,"user_tz":-480,"elapsed":3,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"4d99dc8e-1159-4944-bf4c-c0bb9f044a84","id":"VRantnREbExl"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[2119   69]\n"," [  51   12]]\n","======================================================\n","\n","              precision    recall  f1-score   support\n","\n","         0.0       0.98      0.97      0.97      2188\n","         1.0       0.15      0.19      0.17        63\n","\n","    accuracy                           0.95      2251\n","   macro avg       0.56      0.58      0.57      2251\n","weighted avg       0.95      0.95      0.95      2251\n","\n"]}]},{"cell_type":"markdown","source":["隨機森林"],"metadata":{"id":"J4c6tn_JbExm"}},{"cell_type":"code","source":["from sklearn.ensemble import RandomForestClassifier\n","RF = RandomForestClassifier(n_estimators=85,max_features=\"sqrt\",oob_score=True)\n","RF.fit(X_train.values,y_train.values)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1673246061775,"user_tz":-480,"elapsed":3078,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"078c84f8-1118-4500-a465-ebc669c3ddf9","id":"g50mP_B1bExm"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["RandomForestClassifier(max_features='sqrt', n_estimators=85, oob_score=True)"]},"metadata":{},"execution_count":489}]},{"cell_type":"code","source":["#訓練\n","RF_pred= RF.predict(X_train)\n","from sklearn.metrics import classification_report,confusion_matrix\n","print(confusion_matrix(y_train,RF_pred))\n","print(\"======================================================\\n\")\n","print(classification_report(y_train,RF_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1673246061776,"user_tz":-480,"elapsed":8,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"9b29aefa-a23e-40aa-f2b2-ce74c655cf19","id":"X2XtHuEjbExm"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[4411    0]\n"," [   0  157]]\n","======================================================\n","\n","              precision    recall  f1-score   support\n","\n","         0.0       1.00      1.00      1.00      4411\n","         1.0       1.00      1.00      1.00       157\n","\n","    accuracy                           1.00      4568\n","   macro avg       1.00      1.00      1.00      4568\n","weighted avg       1.00      1.00      1.00      4568\n","\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/sklearn/base.py:443: UserWarning: X has feature names, but RandomForestClassifier was fitted without feature names\n","  warnings.warn(\n"]}]},{"cell_type":"code","source":["#測試\n","RF_pred= RF.predict(X_test)\n","from sklearn.metrics import classification_report,confusion_matrix\n","print(confusion_matrix(y_test,RF_pred))\n","print(\"======================================================\\n\")\n","print(classification_report(y_test,RF_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1673246061776,"user_tz":-480,"elapsed":7,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"b6e00d96-6ff9-4c35-be61-765db8738487","id":"5tUkrykabExm"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[2183    5]\n"," [  50   13]]\n","======================================================\n","\n","              precision    recall  f1-score   support\n","\n","         0.0       0.98      1.00      0.99      2188\n","         1.0       0.72      0.21      0.32        63\n","\n","    accuracy                           0.98      2251\n","   macro avg       0.85      0.60      0.65      2251\n","weighted avg       0.97      0.98      0.97      2251\n","\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/sklearn/base.py:443: UserWarning: X has feature names, but RandomForestClassifier was fitted without feature names\n","  warnings.warn(\n"]}]},{"cell_type":"markdown","source":["羅吉斯回歸"],"metadata":{"id":"hB7djGGlbExm"}},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression\n","LR = LogisticRegression(solver='lbfgs')\n","LR.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1673246106553,"user_tz":-480,"elapsed":439,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"63182d72-51e2-43f7-86d9-16021bedb9ed","id":"y5YEI38KbExm"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n"]},{"output_type":"execute_result","data":{"text/plain":["LogisticRegression()"]},"metadata":{},"execution_count":492}]},{"cell_type":"code","source":["#訓練\n","from sklearn.metrics import classification_report,confusion_matrix\n","LR_pred= LR.predict(X_train)\n","print(confusion_matrix(y_train,LR_pred))\n","print(\"======================================================\\n\")\n","print(classification_report(y_train,LR_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1673246106837,"user_tz":-480,"elapsed":6,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"76b8b947-d928-4a4e-e742-7406a894310a","id":"_5Qg_6ZvbExm"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[4392   19]\n"," [ 154    3]]\n","======================================================\n","\n","              precision    recall  f1-score   support\n","\n","         0.0       0.97      1.00      0.98      4411\n","         1.0       0.14      0.02      0.03       157\n","\n","    accuracy                           0.96      4568\n","   macro avg       0.55      0.51      0.51      4568\n","weighted avg       0.94      0.96      0.95      4568\n","\n"]}]},{"cell_type":"code","source":["#測試\n","from sklearn.metrics import classification_report,confusion_matrix\n","LR_pred= LR.predict(X_test)\n","print(confusion_matrix(y_test,LR_pred))\n","print(\"======================================================\\n\")\n","print(classification_report(y_test,LR_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1673246106838,"user_tz":-480,"elapsed":5,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"65a953e1-f6be-48a6-bc2d-076c0b4d4294","id":"e2sSqjKBbExm"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[2171   17]\n"," [  62    1]]\n","======================================================\n","\n","              precision    recall  f1-score   support\n","\n","         0.0       0.97      0.99      0.98      2188\n","         1.0       0.06      0.02      0.02        63\n","\n","    accuracy                           0.96      2251\n","   macro avg       0.51      0.50      0.50      2251\n","weighted avg       0.95      0.96      0.96      2251\n","\n"]}]},{"cell_type":"markdown","source":["KNN"],"metadata":{"id":"XQyGQQIXbExm"}},{"cell_type":"code","source":["from sklearn.neighbors import KNeighborsClassifier\n","knn = KNeighborsClassifier(n_neighbors=15) \n","knn.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672996293739,"user_tz":-480,"elapsed":455,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"c4935fe2-fab1-48e2-9c5e-2f7a579fff9a","id":"LIztV0oFbExo"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["KNeighborsClassifier(n_neighbors=15)"]},"metadata":{},"execution_count":403}]},{"cell_type":"code","source":["#訓練\n","knn_pred= knn.predict(X_train)\n","from sklearn.metrics import classification_report,confusion_matrix\n","print(confusion_matrix(y_train,knn_pred))\n","print(\"======================================================\\n\")\n","print(classification_report(y_train,knn_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672996294549,"user_tz":-480,"elapsed":354,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"fa039361-68d0-4fdb-fea1-0a1069ca23fa","id":"YHbWcvStbExo"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[4411    0]\n"," [ 156    1]]\n","======================================================\n","\n","              precision    recall  f1-score   support\n","\n","         0.0       0.97      1.00      0.98      4411\n","         1.0       1.00      0.01      0.01       157\n","\n","    accuracy                           0.97      4568\n","   macro avg       0.98      0.50      0.50      4568\n","weighted avg       0.97      0.97      0.95      4568\n","\n"]}]},{"cell_type":"code","source":["#測試\n","knn_pred= knn.predict(X_test)\n","from sklearn.metrics import classification_report,confusion_matrix\n","print(confusion_matrix(y_test,knn_pred))\n","print(\"======================================================\\n\")\n","print(classification_report(y_test,knn_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1672996295249,"user_tz":-480,"elapsed":702,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"ccb47107-e2ec-4365-b226-e20f44be3653","id":"tNnISK23bExo"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[2188    0]\n"," [  63    0]]\n","======================================================\n","\n","              precision    recall  f1-score   support\n","\n","         0.0       0.97      1.00      0.99      2188\n","         1.0       0.00      0.00      0.00        63\n","\n","    accuracy                           0.97      2251\n","   macro avg       0.49      0.50      0.49      2251\n","weighted avg       0.94      0.97      0.96      2251\n","\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.8/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.8/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"markdown","source":["#標準化、特徵篩選 混淆矩陣"],"metadata":{"id":"CKJAGxZYqg84"}},{"cell_type":"code","source":["#給下面自變數X取除了Bankrupt?以外的欄位名稱，不然一個一個打會打到亂掉\n","a33=datanew.copy()"],"metadata":{"id":"wHL0OjeJqg85"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X=a33[a33.columns]\n","y=data['Bankrupt?']\n","from imblearn.under_sampling import RandomUnderSampler\n","rus = RandomUnderSampler()\n","X_resampled, y_resampled = rus.fit_resample(X, y)\n","X_train, X_test,y_train,y_test = train_test_split(X_resampled,y_resampled,test_size = 0.33 ,random_state=33)"],"metadata":{"id":"OHIPbUBnqg85"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["決策樹"],"metadata":{"id":"ig_DnxVQqg85"}},{"cell_type":"code","source":["from sklearn import tree\n","DT = tree.DecisionTreeClassifier(max_depth=65)\n","DT= DT.fit(X_train, y_train)"],"metadata":{"id":"lnUKYREGqg85"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#訓練\n","DT_pred= DT.predict(X_train)\n","from sklearn.metrics import classification_report,confusion_matrix\n","print(confusion_matrix(y_train,DT_pred))\n","print(\"======================================================\\n\")\n","print(classification_report(y_train,DT_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1673246191196,"user_tz":-480,"elapsed":293,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"e3effcf6-79d7-49fc-b369-e810a2f9edd2","id":"PhGjpqJ4qg85"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[159   0]\n"," [  0 135]]\n","======================================================\n","\n","              precision    recall  f1-score   support\n","\n","         0.0       1.00      1.00      1.00       159\n","         1.0       1.00      1.00      1.00       135\n","\n","    accuracy                           1.00       294\n","   macro avg       1.00      1.00      1.00       294\n","weighted avg       1.00      1.00      1.00       294\n","\n"]}]},{"cell_type":"code","source":["#測試\n","DT_pred= DT.predict(X_test)\n","from sklearn.metrics import classification_report,confusion_matrix\n","print(confusion_matrix(y_test,DT_pred))\n","print(\"======================================================\\n\")\n","print(classification_report(y_test,DT_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1673246191661,"user_tz":-480,"elapsed":3,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"88e1bab7-cbc3-4cc5-be79-0f0a46f55324","id":"vq0cGDqFqg86"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[49 12]\n"," [17 68]]\n","======================================================\n","\n","              precision    recall  f1-score   support\n","\n","         0.0       0.74      0.80      0.77        61\n","         1.0       0.85      0.80      0.82        85\n","\n","    accuracy                           0.80       146\n","   macro avg       0.80      0.80      0.80       146\n","weighted avg       0.81      0.80      0.80       146\n","\n"]}]},{"cell_type":"markdown","source":["隨機森林"],"metadata":{"id":"Vb86ar0dqg86"}},{"cell_type":"code","source":["from sklearn.ensemble import RandomForestClassifier\n","RF = RandomForestClassifier(n_estimators=85,max_features=\"sqrt\",oob_score=True)\n","RF.fit(X_train.values,y_train.values)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1673246226878,"user_tz":-480,"elapsed":456,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"a8757e18-9588-4fcd-9b66-364677edcaf0","id":"PctOoF0oqg86"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["RandomForestClassifier(max_features='sqrt', n_estimators=85, oob_score=True)"]},"metadata":{},"execution_count":500}]},{"cell_type":"code","source":["#訓練\n","RF_pred= RF.predict(X_train)\n","from sklearn.metrics import classification_report,confusion_matrix\n","print(confusion_matrix(y_train,RF_pred))\n","print(\"======================================================\\n\")\n","print(classification_report(y_train,RF_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1673246227274,"user_tz":-480,"elapsed":9,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"9c9423ea-7fc5-4289-92ab-e60885c1f60f","id":"Fzt1vAgKqg86"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[159   0]\n"," [  0 135]]\n","======================================================\n","\n","              precision    recall  f1-score   support\n","\n","         0.0       1.00      1.00      1.00       159\n","         1.0       1.00      1.00      1.00       135\n","\n","    accuracy                           1.00       294\n","   macro avg       1.00      1.00      1.00       294\n","weighted avg       1.00      1.00      1.00       294\n","\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/sklearn/base.py:443: UserWarning: X has feature names, but RandomForestClassifier was fitted without feature names\n","  warnings.warn(\n"]}]},{"cell_type":"code","source":["#測試\n","RF_pred= RF.predict(X_test)\n","from sklearn.metrics import classification_report,confusion_matrix\n","print(confusion_matrix(y_test,RF_pred))\n","print(\"======================================================\\n\")\n","print(classification_report(y_test,RF_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1673246227275,"user_tz":-480,"elapsed":8,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"e6905f77-2033-4067-8a1c-79a0835056d5","id":"-V5TFzFQqg86"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[53  8]\n"," [10 75]]\n","======================================================\n","\n","              precision    recall  f1-score   support\n","\n","         0.0       0.84      0.87      0.85        61\n","         1.0       0.90      0.88      0.89        85\n","\n","    accuracy                           0.88       146\n","   macro avg       0.87      0.88      0.87       146\n","weighted avg       0.88      0.88      0.88       146\n","\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/sklearn/base.py:443: UserWarning: X has feature names, but RandomForestClassifier was fitted without feature names\n","  warnings.warn(\n"]}]},{"cell_type":"markdown","source":["羅吉斯回歸"],"metadata":{"id":"MK8vrDJHqg86"}},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression\n","LR = LogisticRegression(solver='lbfgs')\n","LR.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1673246265847,"user_tz":-480,"elapsed":419,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"ac83a438-f458-44df-ad01-d3b93041f4dc","id":"qkzpztmsqg87"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegression()"]},"metadata":{},"execution_count":503}]},{"cell_type":"code","source":["#訓練\n","from sklearn.metrics import classification_report,confusion_matrix\n","LR_pred= LR.predict(X_train)\n","print(confusion_matrix(y_train,LR_pred))\n","print(\"======================================================\\n\")\n","print(classification_report(y_train,LR_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1673246266186,"user_tz":-480,"elapsed":6,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"3fed0d99-a8a5-4737-f1c7-210e095d572c","id":"ArJS3rIWqg87"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[135  24]\n"," [ 27 108]]\n","======================================================\n","\n","              precision    recall  f1-score   support\n","\n","         0.0       0.83      0.85      0.84       159\n","         1.0       0.82      0.80      0.81       135\n","\n","    accuracy                           0.83       294\n","   macro avg       0.83      0.82      0.83       294\n","weighted avg       0.83      0.83      0.83       294\n","\n"]}]},{"cell_type":"code","source":["#測試\n","from sklearn.metrics import classification_report,confusion_matrix\n","LR_pred= LR.predict(X_test)\n","print(confusion_matrix(y_test,LR_pred))\n","print(\"======================================================\\n\")\n","print(classification_report(y_test,LR_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1673246266187,"user_tz":-480,"elapsed":5,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"c1a56b38-1a44-4143-eabc-afd7e00c7e1c","id":"gKn3K06jqg87"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[53  8]\n"," [20 65]]\n","======================================================\n","\n","              precision    recall  f1-score   support\n","\n","         0.0       0.73      0.87      0.79        61\n","         1.0       0.89      0.76      0.82        85\n","\n","    accuracy                           0.81       146\n","   macro avg       0.81      0.82      0.81       146\n","weighted avg       0.82      0.81      0.81       146\n","\n"]}]},{"cell_type":"markdown","source":["KNN"],"metadata":{"id":"1DMhiWXHqg87"}},{"cell_type":"code","source":["from sklearn.neighbors import KNeighborsClassifier\n","knn = KNeighborsClassifier(n_neighbors=15) \n","knn.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1673246306427,"user_tz":-480,"elapsed":504,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"8595ad66-5e8f-4828-ba50-907bfe40e857","id":"REAjSRN2qg87"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["KNeighborsClassifier(n_neighbors=15)"]},"metadata":{},"execution_count":506}]},{"cell_type":"code","source":["#訓練\n","knn_pred= knn.predict(X_train)\n","from sklearn.metrics import classification_report,confusion_matrix\n","print(confusion_matrix(y_train,knn_pred))\n","print(\"======================================================\\n\")\n","print(classification_report(y_train,knn_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1673246306733,"user_tz":-480,"elapsed":6,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"cc29b36f-502d-42db-c531-bb7ff7908ca8","id":"0fHQXyD5qg87"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[135  24]\n"," [ 41  94]]\n","======================================================\n","\n","              precision    recall  f1-score   support\n","\n","         0.0       0.77      0.85      0.81       159\n","         1.0       0.80      0.70      0.74       135\n","\n","    accuracy                           0.78       294\n","   macro avg       0.78      0.77      0.77       294\n","weighted avg       0.78      0.78      0.78       294\n","\n"]}]},{"cell_type":"code","source":["#測試\n","knn_pred= knn.predict(X_test)\n","from sklearn.metrics import classification_report,confusion_matrix\n","print(confusion_matrix(y_test,knn_pred))\n","print(\"======================================================\\n\")\n","print(classification_report(y_test,knn_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1673246306733,"user_tz":-480,"elapsed":4,"user":{"displayName":"張啟玥Selina","userId":"14947581420412888356"}},"outputId":"9384b830-0e09-483a-b29a-3c8433006ebd","id":"lQehRgcTqg87"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[53  8]\n"," [28 57]]\n","======================================================\n","\n","              precision    recall  f1-score   support\n","\n","         0.0       0.65      0.87      0.75        61\n","         1.0       0.88      0.67      0.76        85\n","\n","    accuracy                           0.75       146\n","   macro avg       0.77      0.77      0.75       146\n","weighted avg       0.78      0.75      0.75       146\n","\n"]}]}]}